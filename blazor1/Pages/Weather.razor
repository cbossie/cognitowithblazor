@page "/weather"
@inject IWeatherApiService Api
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>GetWeatherData</PageTitle>

<h1>Retreive Data from API</h1>

<AuthorizeView>
    <Authorized>
        <button class="btn btn-primary" @onclick="GetData">Retrieve Data</button>
    </Authorized>
    <NotAuthorized>
        Login to activate this component.
    </NotAuthorized>
</AuthorizeView>



@if (Forecasts == null)
{
    <p><em>No Data Yet!</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in Forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}




@code {
    private IEnumerable<WeatherForecast>? Forecasts { get; set; }

    protected async Task GetData()
    {
        Forecasts =  await Api.GetWeatherForecast();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        int a = 2;
    }






}
